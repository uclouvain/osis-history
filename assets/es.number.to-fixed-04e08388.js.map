{"version":3,"file":"es.number.to-fixed-04e08388.js","sources":["../../node_modules/core-js/internals/this-number-value.js","../../node_modules/core-js/internals/string-repeat.js","../../node_modules/core-js/modules/es.number.to-fixed.js"],"sourcesContent":["var classof = require('../internals/classof-raw');\n\n// `thisNumberValue` abstract operation\n// https://tc39.es/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  if (typeof value != 'number' && classof(value) != 'Number') {\n    throw TypeError('Incorrect invocation');\n  }\n  return +value;\n};\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nmodule.exports = function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = String(data[index]);\n      s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n"],"names":["classof","require$$0","thisNumberValue","__name","value","toInteger","requireObjectCoercible","require$$1","stringRepeat","count","str","result","n","$","require$$2","repeat","require$$3","fails","require$$4","nativeToFixed","floor","pow","x","acc","log","x2","multiply","data","c","index","c2","divide","dataToString","s","t","FORCED","fractionDigits","number","fractDigits","sign","e","z","j","k"],"mappings":"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","x_google_ignoreList":[0,1,2]}